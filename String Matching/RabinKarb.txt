Rabin_Karb_Matching(T,P,d,q)
n <- length[T]
m <- length[P]
h <- d^m-1 mod q
p <- 0
to <- 0

for i <- 1 to m
    do p <- (d*p + p[i]) mod q
       to <- (d*to + T[i]) mod q

for s <- 0 to n-m
    do if p == ts
        then if p[1 ... m] == T[s+1 ... s+m]
            then print "pattern occurs at shift s"
        if(s<n-m)
            do ts+1 <- (d*(ts - T[s+1]h)+T[s+m+1]) mod q

// Time complexity : Best - O(n-m)
                     worst - O(n-m)*m